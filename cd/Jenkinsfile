//CD Pipeline
pipeline {
    agent any

    parameters {
        string(name: 'ARTIFACT_VERSION', description: 'Artifact version to deploy')
    }

    environment {
        DOCKER_IMAGE = "mvc_calc_app:latest"
    }



    stages {
        
    stage('Clean Deploy Folder') {
        steps {
            script {
           
                bat 'if exist deploy rd /s /q deploy'
                bat 'mkdir deploy'
            }
        }
    }

    stage('Who Am I?') {
            steps {
                bat "whoami"
            }
        }
        
        
    stage('Download Artifact') {
        steps {
            script {
                def server = Artifactory.server 'myJFrogInstance'
            
                def downloadSpec = """{
                "files": [
                {
                    "pattern": "clacmvcapp-libs-snapshot/com/nagarro/mvc_calc_app/${params.ARTIFACT_VERSION}/mvc_calc_app-*.war",
                    "target": "deploy/",
                    "flat": "true"
                }
                ]
                }"""

            
                echo "Downloading artifact for version ${params.ARTIFACT_VERSION}"
                server.download spec: downloadSpec
            }
        }
    }

        
    // test phase 2
    stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image using the downloaded WAR file"
                    bat "wsl docker build -t %DOCKER_IMAGE% ."
                }
            }
        }
        
   stage('Deploy Container') {
    steps {
        script {
            echo "Deploying container on WSL..."
            bat "wsl bash -c 'docker rm -f mvc_calc_app || true'"
            bat "wsl docker run -d -p 8090:8080 --name mvc_calc_app %DOCKER_IMAGE%"
        }
    }
}
    }
    
    post {
        success {
            echo "CD Pipeline completed successfully. Deployed artifact version: ${params.ARTIFACT_VERSION}"
        }
        failure {
            echo "CD Pipeline failed. Please check the logs for details."
        }
    }
}
